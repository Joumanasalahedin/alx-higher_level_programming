The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import the function

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now test it

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([["Hello", "World"], [6, 8]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[8, 4, 5], [6, 7]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[3, 8], [4, 2]], "div")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[18, 10], [12, 7]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[10, 5]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[7, 8], [4, 5]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]
